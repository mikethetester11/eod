{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","project","setProject","tasks","setTasks","iterator","setIterator","step","setStep","value","setValue","handleValue","e","target","handleSubmit","stepNumber","i","name","updatedTasks","description","length","preventDefault","useEffect","document","getElementById","focus","console","log","className","onSubmit","id","onChange","placeholder","required","autofocus","onClick","type","copyText","textContent","navigator","clipboard","writeText","map","task","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ba3f4748.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport './App.css';\n\nfunction App() {\n  const [ project, setProject ] = useState(\"\");\n  const [ tasks, setTasks ] = useState([]);\n  const [ iterator, setIterator ] = useState(0);\n  const [ step, setStep ] = useState(1);\n  const [ value, setValue ] = useState(\"\");\n\n  const handleValue = e => {setValue(e.target.value)}\n  \n  const handleSubmit = (e, stepNumber, i) => {\n    switch(stepNumber) {\n      case 1:\n        setProject(value);\n        setStep(2);\n        break;\n      case 2:\n        setTasks([...tasks, {name: value}]);\n        break;\n      case 3:\n        const updatedTasks = [...tasks]; \n        switch (value) {\n          case \"t\":\n            updatedTasks[iterator].description = \"to be tested\";\n            break;\n          case \"c\":\n            updatedTasks[iterator].description = \"code review\";\n            break;\n          case \"d\":\n            updatedTasks[iterator].description = \"done\";\n            break;\n            default :\n            updatedTasks[iterator].description = value;\n        }\n        setTasks(updatedTasks);\n        if (iterator < tasks.length-1) {\n          setIterator(iterator + 1);\n        } else {\n          setIterator(0);\n        }\n        break;\n    }\n    e.preventDefault();\n    setValue(\"\");\n  }\n  \n  const handleClear = () => {\n    setValue(\"\");\n    setProject(\"\");\n    setTasks([]);\n    setStep(1);\n    setIterator(0);\n  }\n\n  useEffect(() => {\n    if (step === 1) {\n      document.getElementById(\"focus-1\").focus();\n    } else if (step === 2) {\n      document.getElementById(\"focus-2\").focus();\n    } else {\n      document.getElementById(\"focus-3\").focus();\n    }\n    console.log(document.getElementById(\"autoFocus\"))\n  }, [step]);\n\n  const handleCopy = () => {\n    var copyText = document.getElementById(\"result\").textContent;\n  \n    navigator.clipboard.writeText(copyText);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"center\">\n        <div className={step === 3 ? \"edit\" : \"hide\"}>Editting: {project + \"-\" + tasks[iterator]?.name}</div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <form onSubmit={(e) => handleSubmit(e, 1)} className={step === 1 ? \"\" : \"hidden\"}>\n              <input id=\"focus-1\" value={value} onChange={handleValue} placeholder=\"Project (i.e. wcl)\" required></input>\n            </form>\n            <form onSubmit={(e) => handleSubmit(e, 2)} className={step === 2 ? \"\" : \"hidden\"}>\n              <input id=\"focus-2\" value={value} onChange={handleValue} placeholder=\"Task number (i.e. 251)\" autofocus></input>\n            </form>\n            <form onSubmit={(e) => handleSubmit(e, 3)} className={step === 3 ? \"\" : \"hidden\"}>\n              <input id=\"focus-3\" value={value} onChange={handleValue} placeholder=\"Status (i.e. done)\"></input>\n            </form>\n            <div className=\"row btns\">\n              <button className=\"btn\" onClick={handleClear}>Clear</button>\n              {\n                step === 3\n                  ? \n                    <button className=\"btn\" type=\"button\" onClick={handleCopy}>Copy</button>\n                  :\n                    step === 2\n                      ?\n                        <button className=\"btn\" type=\"button\" onClick={() => setStep(3)}>Next</button>\n                      :\n                        null\n              }\n            </div>\n            <div className=\"col legend\">\n              <p>c = code review</p>\n              <p>d = done</p>\n              <p>t = to be tested</p>\n            </div>\n          </div>\n          <div className=\"col\">\n            <div id=\"result\" className=\"row\">\n              {tasks.map(task => \n                project + '-' + task.name + ' -> ' + (task.description ? task.description : \"\") + `\\n`\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}